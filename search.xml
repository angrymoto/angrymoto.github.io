<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[giveupjquery-1]]></title>
      <url>/2017/05/08/giveupjquery-1/</url>
      <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><blockquote>
<p>很多很多传统的Web开发者还在用着传统的jquery和ES5，大家都知道现在的前端如火如荼，但是眼花缭乱的框架和层出不穷的新概念，让很多人无从下手，本文从0开始，带你一步步由jquery操作DOM转型成为一个新思想的前端开发者。没有过多的引申和概念解释。先上手实践，再回头体会。让我们开始。（本系列默认认为学习者有使用搜索引擎学习概念和解决问题的能力）</p>
</blockquote>
<h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><blockquote>
<p>使用Typescript+Webpack+jquery开发，一个简单列表，一个按钮，点击按钮，在列表里增加一条新记录，记录的后面显示本记录创建的时间，起初我们先使用jquey, 然后我们再放弃它。再放弃它之前，我们先学会怎么在Typescript里使用jquery。</p>
</blockquote>
<ul>
<li><p>框架/库/工具：</p>
<ol>
<li>Typescript（如果你懂C#或者Java，这个用起来会很简单。)</li>
<li>Webpack （最主流热门的打包工具，React/Angular/Vue都在用它）</li>
<li>jquery </li>
<li>Visual Studio Code </li>
<li>ConsoleZ (Win下很好用的一款命令行工具)</li>
</ol>
</li>
<li><p>开始</p>
<ol>
<li>首先，你要安装过NodeJS，如果没有，先去安装，因为我们需要使用NPM来安装管理依赖，直接去<a href="https://nodejs.org" target="_blank" rel="external">官网</a>下载安装就可以。</li>
<li>安装完NodeJS之后，因为网络原因，有时候NPM会非常慢，替换为<a href="http://npm.taobao.org/" target="_blank" rel="external">淘宝的NPM镜像</a></li>
<li><p>打开VSCode，找个你喜欢的位置，创建一个文件夹，然后新建一个index.html<br><img src="http://upload-images.jianshu.io/upload_images/1076822-d5e8687e6167d972.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p> ￼</p>
</li>
<li>写入一个基本的html页面结构，新建两个文件夹，src和dist，我们的typescript文件会放在src里，编译后的js文件在dist里。<br> <img src="http://upload-images.jianshu.io/upload_images/1076822-2a5d6baa0d57a877.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2017-05-08-10-56-18.jpg"><br> ￼</li>
<li><p>打开你的命令行工具，cmd，powershell或者git bash。这里我使用的是ConsoleZ，如果喜欢的话，可以在<a href="https://github.com/cbucher/console" target="_blank" rel="external">这里</a>找到怎么安装使用。在此工作目录下，使用</p>
<p> <code>npm init</code></p>
<p> 然后一路输入，初始化一个package.json，这个文件就是你前端工程化的一个配置文件。<br><img src="http://upload-images.jianshu.io/upload_images/1076822-9f3488383a6caa10.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2017-05-08-11-08-13.jpg"></p>
</li>
<li><p>现在来使用npm安装开发要使用的依赖，typescript，webpack，为了让webpack可以装载typescript，还要安装两个loader：awesome-typescript-loader，source-map-loader。因为这些都只是开发阶段要用的工具，并不是最终代码要使用的库，所以加上-dev<br> <code>npm install typescript webpack awesome-typescript-loader source-map-loader  --save-dev</code></p>
</li>
<li>安装jquery，这次是要使用在正式环境里的，所以不需要加上-dev，(这里我们使用了npm来引入jquery，不在使用在页面上使用&lt; script&gt;标签来引入的方式)<br> <code>npm install jquery --save</code></li>
<li>因为我们是在typescript里使用jquery，所以我们需要添加jquery的@types，为了能让typescript使用它的类型<br> <code>npm install @types/jquery --save</code></li>
<li><p>在根目录下添加tsconfig.json文件，这个文件是用来配置typescript的，我们可以看到，是把src目录下的所有文件编译到dist目录下，编译成es5</p>
 <figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">            <span class="attr">"compilerOptions"</span>: &#123;</div><div class="line">                <span class="attr">"outDir"</span>: <span class="string">"./dist/"</span>,</div><div class="line">                <span class="attr">"sourceMap"</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">"noImplicitAny"</span>: <span class="literal">false</span>,</div><div class="line">                <span class="attr">"module"</span>: <span class="string">"commonjs"</span>,</div><div class="line">                <span class="attr">"target"</span>: <span class="string">"es5"</span>,</div><div class="line">                <span class="attr">"allowJs"</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">"include"</span>: [</div><div class="line">                <span class="string">"./src/*"</span></div><div class="line">            ],</div><div class="line">            <span class="attr">"exclude"</span>: [</div><div class="line">                <span class="string">"node_modules"</span></div><div class="line">            ]</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>接下来配置webpack，让webpack来打包typescript文件，在根目录下添加webpack.config.js，配置typescirpt loader。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">        <span class="attr">entry</span>: <span class="string">"./src/app.ts"</span>,</div><div class="line">        <span class="attr">output</span>: &#123;</div><div class="line">            <span class="attr">filename</span>: <span class="string">"app.js"</span>,</div><div class="line">            <span class="attr">path</span>: __dirname + <span class="string">"/dist"</span></div><div class="line">        &#125;,</div><div class="line">        <span class="attr">devtool</span>: <span class="string">"source-map"</span>,</div><div class="line"></div><div class="line">        <span class="attr">resolve</span>: &#123;</div><div class="line">            <span class="attr">extensions</span>: [<span class="string">".webpack.js"</span>, <span class="string">".web.js"</span>, <span class="string">".ts"</span>, <span class="string">".tsx"</span>, <span class="string">".js"</span>]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">module</span>: &#123;</div><div class="line">            <span class="attr">rules</span>: [</div><div class="line">                &#123;</div><div class="line">                    <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</div><div class="line">                    <span class="attr">enforce</span>: <span class="string">"pre"</span>,</div><div class="line">                    <span class="attr">loader</span>: <span class="string">"source-map-loader"</span></div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                    <span class="attr">enforce</span>: <span class="string">'pre'</span>,</div><div class="line">                    <span class="attr">test</span>: <span class="regexp">/\.tsx?$/</span>,</div><div class="line">                    <span class="attr">use</span>: <span class="string">"source-map-loader"</span></div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                    <span class="attr">test</span>: <span class="regexp">/\.tsx?$/</span>,</div><div class="line">                    <span class="attr">loader</span>: <span class="string">'awesome-typescript-loader'</span>,</div><div class="line">                    <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span></div><div class="line">                &#125;,</div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">externals</span>: &#123;&#125;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>好了，让我们来写一些代码。在app.ts里，写一个App类，然后使用它</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">import * as $ from &quot;jquery&quot;;</div><div class="line">export class App &#123;</div><div class="line">            public addComment():void &#123;</div><div class="line">                let creatAt = new Date();</div><div class="line">                $(&quot;#main&quot;).append(&quot;&lt;div&gt;&lt;span&gt;new comment pushed at.&quot;+creatAt.toTimeString()+&quot;&lt;/span&gt;&quot;);</div><div class="line">            &#125;</div><div class="line">&#125;</div><div class="line">let app = new App();</div><div class="line">//jquery $()</div><div class="line">$(()=&gt;&#123;</div><div class="line">            $(&quot;#btn-add&quot;).click(app.addComment);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>现在可以编译了，如果我们没有使用webpack，我们需要使用tsc命令来编译typescript，现在我们使用了webpack，直接在命令行输入webpack就可以了<br><code>webpack</code><br>注意，如果提示没有webpack命令，安装webpack到全局<br><code>npm install webpack -g</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1076822-2640c08d1e54a9b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
</li>
<li><p>编译完成后，我们可以看到dist文件夹已经出现了app.js和app.js.map，map文件是用来调试时做关联的。现在改动一下index.html，引用这个app.js</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1076822-97c0fca080d8cf36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
</li>
<li><p>现在可以打开index.html来看看，每当我们点击按钮，就会添加一条评论。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1076822-9cb572fd25549f4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"> </p>
</li>
<li><p>现在我们的jquery已经可以和typescript以及webpack一起使用了。但是这只是开始，我们知道了如何写一个简单的typescript类，如何引入jquery来使用，如何让它们配合使用，下一节，我们将引入下面的新东西</p>
<blockquote>
<p>1，目前我们的页面还是以一个本地文件的方式在浏览器里打开的，下一节我们要使用一个本地的简易web服务器来承载它，并且可以在有任何改动的时候自动刷新页面。<br>2，我们要使用整合的npm script命令（npm start）来一次完成编译，运行两个步骤。<br>3，我们要引入moment库，来给每一条评论后面显示一个发布后到现在的时间差信息，就像下面的图<br>4，我们要改造这个评论列表，使用React或Angualar创建一个Component</p>
</blockquote>
</li>
</ol>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1076822-f671a8b0bc721648.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>

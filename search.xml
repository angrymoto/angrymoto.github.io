<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <url>/2017/05/08/1/</url>
      <content type="html"><![CDATA[<h2 id="从jquery转型-（一）"><a href="#从jquery转型-（一）" class="headerlink" title="从jquery转型 （一）"></a>从jquery转型 （一）</h2><p>[TOC]</p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><blockquote>
<p>很多很多传统的Web开发者还在用着传统的jquery和ES5，大家都知道现在的前端如火如荼，但是眼花缭乱的框架和层出不穷的新概念，让很多人无从下手，本文从0开始，带你一步步由jquery操作DOM转型成为一个新思想的前端开发者。没有过多的引申和概念解释。先上手实践，再回头体会。让我们开始。<font color="orange">（本系列默认认为学习者有使用搜索引擎学习概念和解决问题的能力）</font></p>
</blockquote>
<h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><blockquote>
<p>使用Typescript+Webpack+jquery开发，一个简单列表，一个按钮，点击按钮，在列表里增加一条新记录，记录的后面显示本记录创建的时间，起初我们先使用jquey, 然后我们再放弃它。再放弃它之前，我们先学会怎么在Typescript里使用jquery。</p>
</blockquote>
<ul>
<li><p>框架/库/工具：</p>
<ol>
<li>Typescript（如果你懂C#或者Java，这个用起来会很简单。)</li>
<li>Webpack （最主流热门的打包工具，React/Angular/Vue都在用它）</li>
<li>jquery </li>
<li>moment （日期时间的库，非常好用）</li>
<li>Visual Studio Code </li>
<li>ConsoleZ (Win下很好用的一款命令行工具)</li>
</ol>
</li>
<li><p>开始</p>
<ol>
<li>首先，你要安装过NodeJS，如果没有，先去安装，因为我们需要使用NPM来安装管理依赖，直接去<a href="https://nodejs.org" target="_blank" rel="external">官网</a>下载安装就可以。</li>
<li>安装完NodeJS之后，因为网络原因，有时候NPM会非常慢，替换为<a href="http://npm.taobao.org/" target="_blank" rel="external">淘宝的NPM镜像</a></li>
<li>打开VSCode，找个你喜欢的位置，创建一个文件夹，然后新建一个index.html<br><img src="_image/2017-05-08-10-48-35.jpg" alt=""><br> ￼</li>
<li>写入一个基本的html页面结构，新建两个文件夹，src和dist，我们的typescript文件会放在src里，编译后的js文件在dist里。<br><img src="_image/2017-05-08-10-56-18.jpg" alt=""><br> ￼</li>
<li><p>打开你的命令行工具，cmd，powershell或者git bash。这里我使用的是ConsoleZ，如果喜欢的话，可以在<a href="https://github.com/cbucher/console" target="_blank" rel="external">这里</a>找到怎么安装使用。在此工作目录下，使用</p>
<p> <code>npm init</code></p>
<p> 然后一路输入，初始化一个package.json，这个文件就是你前端工程化的一个配置文件。<br>￼<br><img src="_image/2017-05-08-11-08-13.jpg" alt=""></p>
</li>
<li><p>现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以加上-dev</p>
<p> <code>npm install typescript webpack --save-dev</code></p>
</li>
<li><p>安装jquery，这次是要使用在正式环境里的，所以不需要加上-dev，(这里我们使用了npm来引入jquery，不在使用在页面上使用&lt; script&gt;标签来引入的方式)</p>
<p> <code>npm install jquery --save</code></p>
</li>
<li><p>因为我们是在typescript里使用jquery，所以我们需要添加jquery的@types，为了能让typescript使用它的类型</p>
<p> <code>npm install @types/jquery --save</code></p>
</li>
<li>在根目录下添加tsconfig.json文件，这个文件是用来配置typescript的<br> ```{<pre><code>&quot;compilerOptions&quot;: {
    &quot;outDir&quot;: &quot;./dist/&quot;,
    &quot;sourceMap&quot;: true,
    &quot;noImplicitAny&quot;: false,
    &quot;module&quot;: &quot;commonjs&quot;,
    &quot;target&quot;: &quot;es5&quot;,
    &quot;allowJs&quot;: true
},
&quot;include&quot;: [
    &quot;./src/*&quot;
],
&quot;exclude&quot;: [
    &quot;node_modules&quot;
]
</code></pre> }</li>
</ol>
</li>
</ul>
<pre><code>7.     6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里
6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里
7.     6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里
</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title></title>
      <url>/2017/05/08/giveupjquery1/</url>
      <content type="html"><![CDATA[<h2 id="从jquery转型-（一）"><a href="#从jquery转型-（一）" class="headerlink" title="从jquery转型 （一）"></a>从jquery转型 （一）</h2><p>[TOC]</p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><blockquote>
<p>很多很多传统的Web开发者还在用着传统的jquery和ES5，大家都知道现在的前端如火如荼，但是眼花缭乱的框架和层出不穷的新概念，让很多人无从下手，本文从0开始，带你一步步由jquery操作DOM转型成为一个新思想的前端开发者。没有过多的引申和概念解释。先上手实践，再回头体会。让我们开始。<font color="orange">（本系列默认认为学习者有使用搜索引擎学习概念和解决问题的能力）</font></p>
</blockquote>
<h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><blockquote>
<p>使用Typescript+Webpack+jquery开发，一个简单列表，一个按钮，点击按钮，在列表里增加一条新记录，记录的后面显示本记录创建的时间，起初我们先使用jquey, 然后我们再放弃它。再放弃它之前，我们先学会怎么在Typescript里使用jquery。</p>
</blockquote>
<ul>
<li><p>框架/库/工具：</p>
<ol>
<li>Typescript（如果你懂C#或者Java，这个用起来会很简单。)</li>
<li>Webpack （最主流热门的打包工具，React/Angular/Vue都在用它）</li>
<li>jquery </li>
<li>moment （日期时间的库，非常好用）</li>
<li>Visual Studio Code </li>
<li>ConsoleZ (Win下很好用的一款命令行工具)</li>
</ol>
</li>
<li><p>开始</p>
<ol>
<li>首先，你要安装过NodeJS，如果没有，先去安装，因为我们需要使用NPM来安装管理依赖，直接去<a href="https://nodejs.org" target="_blank" rel="external">官网</a>下载安装就可以。</li>
<li>安装完NodeJS之后，因为网络原因，有时候NPM会非常慢，替换为<a href="http://npm.taobao.org/" target="_blank" rel="external">淘宝的NPM镜像</a></li>
<li><p>打开VSCode，找个你喜欢的位置，创建一个文件夹，然后新建一个index.html</p>
<pre><code>4. 写入一个基本的html页面结构，新建两个文件夹，src和dist，我们的typescript文件会放在src里，编译后的js文件在dist里。
</code></pre><p> <img src="./_image/2017-05-08-10-56-18.jpg" alt=""></p>
</li>
<li>打开你的命令行工具，cmd，powershell或者git bash。这里我使用的是ConsoleZ，如果喜欢的话，可以在<a href="https://github.com/cbucher/console" target="_blank" rel="external">这里</a>找到怎么安装使用。在此工作目录下，使用<blockquote>
<p>npm init<br> 然后一路输入，初始化一个package.json，这个文件就是你前端工程化的一个配置文件。<br><img src="./_image/2017-05-08-11-08-13.jpg" alt="">## 从jquery转型 （一）</p>
</blockquote>
</li>
</ol>
</li>
</ul>
<p>[TOC]</p>
<h3 id="背景-1"><a href="#背景-1" class="headerlink" title="背景"></a>背景</h3><blockquote>
<p>很多很多传统的Web开发者还在用着传统的jquery和ES5，大家都知道现在的前端如火如荼，但是眼花缭乱的框架和层出不穷的新概念，让很多人无从下手，本文从0开始，带你一步步由jquery操作DOM转型成为一个新思想的前端开发者。没有过多的引申和概念解释。先上手实践，再回头体会。让我们开始。<fontcolor='orange'>（本系列默认认为学习者有使用搜索引擎学习概念和解决问题的能力）</fontcolor='orange'></p>
</blockquote>
<h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><blockquote>
<p>使用Typescript+Webpack+jquery开发，一个简单列表，一个按钮，点击按钮，在列表里增加一条新记录，记录的后面显示本记录创建的时间，起初我们先使用jquey, 然后我们再放弃它。再放弃它之前，我们先学会怎么在Typescript里使用jquery。</p>
</blockquote>
<ul>
<li>框架/库/工具：</li>
</ul>
<ol>
<li><p>Typescript（如果你懂C#或者Java，这个用起来会很简单。)</p>
</li>
<li><p>Webpack （最主流热门的打包工具，React/Angular/Vue都在用它）</p>
</li>
<li><p>jquery </p>
</li>
<li><p>moment （日期时间的库，非常好用）</p>
</li>
<li><p>Visual Studio Code </p>
</li>
<li><p>ConsoleZ (Win下很好用的一款命令行工具)</p>
</li>
</ol>
<ul>
<li>开始</li>
</ul>
<ol>
<li><p>首先，你要安装过NodeJS，如果没有，先去安装，因为我们需要使用NPM来安装管理依赖，直接去<a href="https://nodejs.org" target="_blank" rel="external">官网</a>下载安装就可以。</p>
</li>
<li><p>安装完NodeJS之后，因为网络原因，有时候NPM会非常慢，替换为<a href="http://npm.taobao.org/" target="_blank" rel="external">淘宝的NPM镜像</a></p>
</li>
<li><p>打开VSCode，找个你喜欢的位置，创建一个文件夹，然后新建一个index.html</p>
</li>
</ol>
<ol>
<li>写入一个基本的html页面结构，新建两个文件夹，src和dist，我们的typescript文件会放在src里，编译后的js文件在dist里。</li>
</ol>
<ol>
<li>打开你的命令行工具，cmd，powershell或者git bash。这里我使用的是ConsoleZ，如果喜欢的话，可以在<a href="https://github.com/cbucher/console" target="_blank" rel="external">这里</a>找到怎么安装使用。在此工作目录下，使用</li>
</ol>
<p><code>npm init</code></p>
<p>然后一路输入，初始化一个package.json，这个文件就是你前端工程化的一个配置文件。</p>
<ol>
<li>现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以加上-dev</li>
</ol>
<figure class="highlight plain"><figcaption><span>install typescript webpack --save-dev```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">7. 安装jquery，这次是要使用在正式环境里的，所以不需要加上-dev，(这里我们使用了npm来引入jquery，不在使用在页面上使用&amp;lt;script&amp;gt;标签来引入的方式)</div><div class="line"></div><div class="line">`npm install jquery --save`</div><div class="line"></div><div class="line">8. 因为我们是在typescript里使用jquery，所以我们需要添加jquery的@types，为了能让typescript使用它的类型</div><div class="line"></div><div class="line">`npm install @types/jquery --save`</div><div class="line"></div><div class="line">9. 在根目录下添加tsconfig.json文件，这个文件是用来配置typescript的</div><div class="line"></div><div class="line">```&#123;</div><div class="line"></div><div class="line">&quot;compilerOptions&quot;: &#123;</div><div class="line"></div><div class="line">&quot;outDir&quot;: &quot;./dist/&quot;,</div><div class="line"></div><div class="line">&quot;sourceMap&quot;: true,</div><div class="line"></div><div class="line">&quot;noImplicitAny&quot;: false,</div><div class="line"></div><div class="line">&quot;module&quot;: &quot;commonjs&quot;,</div><div class="line"></div><div class="line">&quot;target&quot;: &quot;es5&quot;,</div><div class="line"></div><div class="line">&quot;allowJs&quot;: true</div><div class="line"></div><div class="line">&#125;,</div><div class="line"></div><div class="line">&quot;include&quot;: [</div><div class="line"></div><div class="line">&quot;./src/*&quot;</div><div class="line"></div><div class="line">],</div><div class="line"></div><div class="line">&quot;exclude&quot;: [</div><div class="line"></div><div class="line">&quot;node\_modules&quot;</div><div class="line"></div><div class="line">]</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">7. 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里</div><div class="line"></div><div class="line">6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里</div><div class="line"></div><div class="line">7. 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里</div><div class="line"></div><div class="line">    6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以加上-dev</div><div class="line">        `npm install typescript webpack --save-dev`</div><div class="line">    7. 安装jquery，这次是要使用在正式环境里的，所以不需要加上-dev，(这里我们使用了npm来引入jquery，不在使用在页面上使用&lt;script&gt;标签来引入的方式)</div><div class="line">        `npm install jquery --save`</div><div class="line">    8. 因为我们是在typescript里使用jquery，所以我们需要添加jquery的@types，为了能让typescript使用它的类型</div><div class="line">        `npm install @types/jquery --save`</div><div class="line">    9. 在根目录下添加tsconfig.json文件，这个文件是用来配置typescript的</div><div class="line">        ```&#123;</div><div class="line">            &quot;compilerOptions&quot;: &#123;</div><div class="line">                &quot;outDir&quot;: &quot;./dist/&quot;,</div><div class="line">                &quot;sourceMap&quot;: true,</div><div class="line">                &quot;noImplicitAny&quot;: false,</div><div class="line">                &quot;module&quot;: &quot;commonjs&quot;,</div><div class="line">                &quot;target&quot;: &quot;es5&quot;,</div><div class="line">                &quot;allowJs&quot;: true</div><div class="line">            &#125;,</div><div class="line">            &quot;include&quot;: [</div><div class="line">                &quot;./src/*&quot;</div><div class="line">            ],</div><div class="line">            &quot;exclude&quot;: [</div><div class="line">                &quot;node_modules&quot;</div><div class="line">            ]</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<pre><code>7.     6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里
6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里
7.     6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里
</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Test]]></title>
      <url>/2017/05/04/Test/</url>
      <content type="html"><![CDATA[<h2 id="这是一个测试"><a href="#这是一个测试" class="headerlink" title="这是一个测试"></a>这是一个测试</h2><h3 id="看看能评论吗？"><a href="#看看能评论吗？" class="headerlink" title="看看能评论吗？"></a>看看能评论吗？</h3>]]></content>
      
        
        <tags>
            
            <tag> test </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/04/19/hello-world/</url>
      <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><br>TestTestTestTestTestTest<a id="more"></a></excerpt></p>
<the rest="" of="" contents="" |="" 余下全文="">

<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
</the>]]></content>
      
        
    </entry>
    
  
  
</search>

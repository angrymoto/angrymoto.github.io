<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jo&#39;s blog</title>
  
  <subtitle>所有的消失都是有始无终的惦念</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://angrymoto.me/"/>
  <updated>2019-03-26T03:27:09.293Z</updated>
  <id>http://angrymoto.me/</id>
  
  <author>
    <name>Jo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从jquery转型 （一）</title>
    <link href="http://angrymoto.me/2017/05/08/giveupjquery-1/"/>
    <id>http://angrymoto.me/2017/05/08/giveupjquery-1/</id>
    <published>2017-05-08T05:53:20.000Z</published>
    <updated>2019-03-26T03:27:09.293Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><blockquote><p>很多很多传统的Web开发者还在用着传统的jquery和ES5，大家都知道现在的前端如火如荼，但是眼花缭乱的框架和层出不穷的新概念，让很多人无从下手，本文从0开始，带你一步步由jquery操作DOM转型成为一个新思想的前端开发者。没有过多的引申和概念解释。先上手实践，再回头体会。让我们开始。（本系列默认认为学习者有使用搜索引擎学习概念和解决问题的能力）</p></blockquote><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><blockquote><p>使用Typescript+Webpack+jquery开发，一个简单列表，一个按钮，点击按钮，在列表里增加一条新记录，记录的后面显示本记录创建的时间，起初我们先使用jquey, 然后我们再放弃它。再放弃它之前，我们先学会怎么在Typescript里使用jquery。</p></blockquote><ul><li><p>框架/库/工具：</p><ol><li>Typescript（如果你懂C#或者Java，这个用起来会很简单。)</li><li>Webpack （最主流热门的打包工具，React/Angular/Vue都在用它）</li><li>jquery </li><li>Visual Studio Code </li><li>ConsoleZ (Win下很好用的一款命令行工具)</li></ol></li><li><p>开始</p><ol><li>首先，你要安装过NodeJS，如果没有，先去安装，因为我们需要使用NPM来安装管理依赖，直接去<a href="https://nodejs.org" target="_blank" rel="noopener">官网</a>下载安装就可以。</li><li>安装完NodeJS之后，因为网络原因，有时候NPM会非常慢，替换为<a href="http://npm.taobao.org/" target="_blank" rel="noopener">淘宝的NPM镜像</a></li><li><p>打开VSCode，找个你喜欢的位置，创建一个文件夹，然后新建一个index.html<br><img src="http://upload-images.jianshu.io/upload_images/1076822-d5e8687e6167d972.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p> ￼</p></li><li>写入一个基本的html页面结构，新建两个文件夹，src和dist，我们的typescript文件会放在src里，编译后的js文件在dist里。<br> <img src="http://upload-images.jianshu.io/upload_images/1076822-2a5d6baa0d57a877.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2017-05-08-10-56-18.jpg"><br> ￼</li><li><p>打开你的命令行工具，cmd，powershell或者git bash。这里我使用的是ConsoleZ，如果喜欢的话，可以在<a href="https://github.com/cbucher/console" target="_blank" rel="noopener">这里</a>找到怎么安装使用。在此工作目录下，使用</p><p> <code>npm init</code></p><p> 然后一路输入，初始化一个package.json，这个文件就是你前端工程化的一个配置文件。<br><img src="http://upload-images.jianshu.io/upload_images/1076822-9f3488383a6caa10.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2017-05-08-11-08-13.jpg"></p></li><li><p>现在来使用npm安装开发要使用的依赖，typescript，webpack，为了让webpack可以装载typescript，还要安装两个loader：awesome-typescript-loader，source-map-loader。因为这些都只是开发阶段要用的工具，并不是最终代码要使用的库，所以加上-dev<br> <code>npm install typescript webpack awesome-typescript-loader source-map-loader  --save-dev</code></p></li><li>安装jquery，这次是要使用在正式环境里的，所以不需要加上-dev，(这里我们使用了npm来引入jquery，不在使用在页面上使用&lt; script&gt;标签来引入的方式)<br> <code>npm install jquery --save</code></li><li>因为我们是在typescript里使用jquery，所以我们需要添加jquery的@types，为了能让typescript使用它的类型<br> <code>npm install @types/jquery --save</code></li><li><p>在根目录下添加tsconfig.json文件，这个文件是用来配置typescript的，我们可以看到，是把src目录下的所有文件编译到dist目录下，编译成es5</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"compilerOptions"</span>: &#123;</span><br><span class="line">        <span class="string">"outDir"</span>: <span class="string">"./dist/"</span>,</span><br><span class="line">        <span class="string">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"noImplicitAny"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"module"</span>: <span class="string">"commonjs"</span>,</span><br><span class="line">        <span class="string">"target"</span>: <span class="string">"es5"</span>,</span><br><span class="line">        <span class="string">"allowJs"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"include"</span>: [</span><br><span class="line">        <span class="string">"./src/*"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"exclude"</span>: [</span><br><span class="line">        <span class="string">"node_modules"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>接下来配置webpack，让webpack来打包typescript文件，在根目录下添加webpack.config.js，配置typescirpt loader。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">"./src/app.ts"</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">"app.js"</span>,</span><br><span class="line">        path: __dirname + <span class="string">"/dist"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    devtool: <span class="string">"source-map"</span>,</span><br><span class="line"></span><br><span class="line">    resolve: &#123;</span><br><span class="line">        extensions: [<span class="string">".webpack.js"</span>, <span class="string">".web.js"</span>, <span class="string">".ts"</span>, <span class="string">".tsx"</span>, <span class="string">".js"</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [&#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                enforce: <span class="string">"pre"</span>,</span><br><span class="line">                loader: <span class="string">"source-map-loader"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                enforce: <span class="string">'pre'</span>,</span><br><span class="line">                test: <span class="regexp">/\.tsx?$/</span>,</span><br><span class="line">                use: <span class="string">"source-map-loader"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.tsx?$/</span>,</span><br><span class="line">                loader: <span class="string">'awesome-typescript-loader'</span>,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    externals: &#123;&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>好了，让我们来写一些代码。在app.ts里，写一个App类，然后使用它</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> $ <span class="keyword">from</span> <span class="string">"jquery"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    public addComment():<span class="keyword">void</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> creatAt = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">          $(<span class="string">"#main"</span>).append(<span class="string">"&lt;div&gt;&lt;span&gt;new comment pushed at."</span>+creatAt.toTimeString()+<span class="string">"&lt;/span&gt;"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> App();</span><br><span class="line"><span class="comment">//jquery $()</span></span><br><span class="line">$(()=&gt;&#123;</span><br><span class="line">            $(<span class="string">"#btn-add"</span>).click(app.addComment);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>现在可以编译了，如果我们没有使用webpack，我们需要使用tsc命令来编译typescript，现在我们使用了webpack，直接在命令行输入webpack就可以了</p><blockquote><p>注意，如果提示没有webpack命令，安装webpack到全局<br><code>npm install webpack -g</code></p></blockquote><p><img src="http://upload-images.jianshu.io/upload_images/1076822-2640c08d1e54a9b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p></li><li><p>编译完成后，我们可以看到dist文件夹已经出现了app.js和app.js.map，map文件是用来调试时做关联的。现在改动一下index.html，引用这个app.js</p><p><img src="http://upload-images.jianshu.io/upload_images/1076822-97c0fca080d8cf36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p></li><li><p>现在可以打开index.html来看看，每当我们点击按钮，就会添加一条评论。</p><p><img src="http://upload-images.jianshu.io/upload_images/1076822-9cb572fd25549f4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"> </p></li><li><p>现在我们的jquery已经可以和typescript以及webpack一起使用了。但是这只是开始，我们知道了如何写一个简单的typescript类，如何引入jquery来使用，如何让它们配合使用，下一节，我们将引入下面的新东西</p><blockquote><p>1，目前我们的页面还是以一个本地文件的方式在浏览器里打开的，下一节我们要使用一个本地的简易web服务器来承载它，并且可以在有任何改动的时候自动刷新页面。<br>2，我们要使用整合的npm script命令（npm start）来一次完成编译，运行两个步骤。<br>3，我们要引入moment库，来给每一条评论后面显示一个发布后到现在的时间差信息，就像下面的图<br><img src="http://upload-images.jianshu.io/upload_images/1076822-f671a8b0bc721648.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br>4，我们要改造这个评论列表，使用React或Angualar创建一个Component</p></blockquote></li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;很多很多传统的Web开发者还在用着传统的jquery和ES5，大家都知道现在的前端如火如荼，但是眼花缭乱的框架和层
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://angrymoto.me/tags/javascript/"/>
    
  </entry>
  
</feed>

{"meta":{"title":"Jo's blog","subtitle":"所有的消失都是有始无终的惦念","description":"于无声处听惊雷","author":"Jo","url":"http://angrymoto.me"},"pages":[{"title":"about","date":"2017-05-04T07:24:27.000Z","updated":"2017-05-04T07:24:27.422Z","comments":true,"path":"about/index.html","permalink":"http://angrymoto.me/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-05-04T07:24:04.000Z","updated":"2017-05-04T07:24:04.443Z","comments":true,"path":"tags/index.html","permalink":"http://angrymoto.me/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"1","date":"2017-05-08T03:42:35.891Z","updated":"2017-05-08T03:44:44.389Z","comments":true,"path":"2017/05/08/1/","link":"","permalink":"http://angrymoto.me/2017/05/08/1/","excerpt":"","text":"从jquery转型 （一）[TOC] 背景 很多很多传统的Web开发者还在用着传统的jquery和ES5，大家都知道现在的前端如火如荼，但是眼花缭乱的框架和层出不穷的新概念，让很多人无从下手，本文从0开始，带你一步步由jquery操作DOM转型成为一个新思想的前端开发者。没有过多的引申和概念解释。先上手实践，再回头体会。让我们开始。（本系列默认认为学习者有使用搜索引擎学习概念和解决问题的能力） 目标 使用Typescript+Webpack+jquery开发，一个简单列表，一个按钮，点击按钮，在列表里增加一条新记录，记录的后面显示本记录创建的时间，起初我们先使用jquey, 然后我们再放弃它。再放弃它之前，我们先学会怎么在Typescript里使用jquery。 框架/库/工具： Typescript（如果你懂C#或者Java，这个用起来会很简单。) Webpack （最主流热门的打包工具，React/Angular/Vue都在用它） jquery moment （日期时间的库，非常好用） Visual Studio Code ConsoleZ (Win下很好用的一款命令行工具) 开始 首先，你要安装过NodeJS，如果没有，先去安装，因为我们需要使用NPM来安装管理依赖，直接去官网下载安装就可以。 安装完NodeJS之后，因为网络原因，有时候NPM会非常慢，替换为淘宝的NPM镜像 打开VSCode，找个你喜欢的位置，创建一个文件夹，然后新建一个index.html ￼ 写入一个基本的html页面结构，新建两个文件夹，src和dist，我们的typescript文件会放在src里，编译后的js文件在dist里。 ￼ 打开你的命令行工具，cmd，powershell或者git bash。这里我使用的是ConsoleZ，如果喜欢的话，可以在这里找到怎么安装使用。在此工作目录下，使用 npm init 然后一路输入，初始化一个package.json，这个文件就是你前端工程化的一个配置文件。￼ 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以加上-dev npm install typescript webpack --save-dev 安装jquery，这次是要使用在正式环境里的，所以不需要加上-dev，(这里我们使用了npm来引入jquery，不在使用在页面上使用&lt; script&gt;标签来引入的方式) npm install jquery --save 因为我们是在typescript里使用jquery，所以我们需要添加jquery的@types，为了能让typescript使用它的类型 npm install @types/jquery --save 在根目录下添加tsconfig.json文件，这个文件是用来配置typescript的 ```{&quot;compilerOptions&quot;: { &quot;outDir&quot;: &quot;./dist/&quot;, &quot;sourceMap&quot;: true, &quot;noImplicitAny&quot;: false, &quot;module&quot;: &quot;commonjs&quot;, &quot;target&quot;: &quot;es5&quot;, &quot;allowJs&quot;: true }, &quot;include&quot;: [ &quot;./src/*&quot; ], &quot;exclude&quot;: [ &quot;node_modules&quot; ] } 7. 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里 7. 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里","categories":[],"tags":[]},{"title":"","slug":"giveupjquery1","date":"2017-05-08T02:36:22.827Z","updated":"2017-05-08T03:41:59.322Z","comments":true,"path":"2017/05/08/giveupjquery1/","link":"","permalink":"http://angrymoto.me/2017/05/08/giveupjquery1/","excerpt":"","text":"从jquery转型 （一）[TOC] 背景 很多很多传统的Web开发者还在用着传统的jquery和ES5，大家都知道现在的前端如火如荼，但是眼花缭乱的框架和层出不穷的新概念，让很多人无从下手，本文从0开始，带你一步步由jquery操作DOM转型成为一个新思想的前端开发者。没有过多的引申和概念解释。先上手实践，再回头体会。让我们开始。（本系列默认认为学习者有使用搜索引擎学习概念和解决问题的能力） 目标 使用Typescript+Webpack+jquery开发，一个简单列表，一个按钮，点击按钮，在列表里增加一条新记录，记录的后面显示本记录创建的时间，起初我们先使用jquey, 然后我们再放弃它。再放弃它之前，我们先学会怎么在Typescript里使用jquery。 框架/库/工具： Typescript（如果你懂C#或者Java，这个用起来会很简单。) Webpack （最主流热门的打包工具，React/Angular/Vue都在用它） jquery moment （日期时间的库，非常好用） Visual Studio Code ConsoleZ (Win下很好用的一款命令行工具) 开始 首先，你要安装过NodeJS，如果没有，先去安装，因为我们需要使用NPM来安装管理依赖，直接去官网下载安装就可以。 安装完NodeJS之后，因为网络原因，有时候NPM会非常慢，替换为淘宝的NPM镜像 打开VSCode，找个你喜欢的位置，创建一个文件夹，然后新建一个index.html 4. 写入一个基本的html页面结构，新建两个文件夹，src和dist，我们的typescript文件会放在src里，编译后的js文件在dist里。 打开你的命令行工具，cmd，powershell或者git bash。这里我使用的是ConsoleZ，如果喜欢的话，可以在这里找到怎么安装使用。在此工作目录下，使用 npm init 然后一路输入，初始化一个package.json，这个文件就是你前端工程化的一个配置文件。## 从jquery转型 （一） [TOC] 背景 很多很多传统的Web开发者还在用着传统的jquery和ES5，大家都知道现在的前端如火如荼，但是眼花缭乱的框架和层出不穷的新概念，让很多人无从下手，本文从0开始，带你一步步由jquery操作DOM转型成为一个新思想的前端开发者。没有过多的引申和概念解释。先上手实践，再回头体会。让我们开始。（本系列默认认为学习者有使用搜索引擎学习概念和解决问题的能力） 目标 使用Typescript+Webpack+jquery开发，一个简单列表，一个按钮，点击按钮，在列表里增加一条新记录，记录的后面显示本记录创建的时间，起初我们先使用jquey, 然后我们再放弃它。再放弃它之前，我们先学会怎么在Typescript里使用jquery。 框架/库/工具： Typescript（如果你懂C#或者Java，这个用起来会很简单。) Webpack （最主流热门的打包工具，React/Angular/Vue都在用它） jquery moment （日期时间的库，非常好用） Visual Studio Code ConsoleZ (Win下很好用的一款命令行工具) 开始 首先，你要安装过NodeJS，如果没有，先去安装，因为我们需要使用NPM来安装管理依赖，直接去官网下载安装就可以。 安装完NodeJS之后，因为网络原因，有时候NPM会非常慢，替换为淘宝的NPM镜像 打开VSCode，找个你喜欢的位置，创建一个文件夹，然后新建一个index.html 写入一个基本的html页面结构，新建两个文件夹，src和dist，我们的typescript文件会放在src里，编译后的js文件在dist里。 打开你的命令行工具，cmd，powershell或者git bash。这里我使用的是ConsoleZ，如果喜欢的话，可以在这里找到怎么安装使用。在此工作目录下，使用 npm init 然后一路输入，初始化一个package.json，这个文件就是你前端工程化的一个配置文件。 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以加上-dev install typescript webpack --save-dev```1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727. 安装jquery，这次是要使用在正式环境里的，所以不需要加上-dev，(这里我们使用了npm来引入jquery，不在使用在页面上使用&amp;lt;script&amp;gt;标签来引入的方式)`npm install jquery --save`8. 因为我们是在typescript里使用jquery，所以我们需要添加jquery的@types，为了能让typescript使用它的类型`npm install @types/jquery --save`9. 在根目录下添加tsconfig.json文件，这个文件是用来配置typescript的```&#123;&quot;compilerOptions&quot;: &#123;&quot;outDir&quot;: &quot;./dist/&quot;,&quot;sourceMap&quot;: true,&quot;noImplicitAny&quot;: false,&quot;module&quot;: &quot;commonjs&quot;,&quot;target&quot;: &quot;es5&quot;,&quot;allowJs&quot;: true&#125;,&quot;include&quot;: [&quot;./src/*&quot;],&quot;exclude&quot;: [&quot;node\\_modules&quot;]&#125;7. 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里7. 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以加上-dev `npm install typescript webpack --save-dev` 7. 安装jquery，这次是要使用在正式环境里的，所以不需要加上-dev，(这里我们使用了npm来引入jquery，不在使用在页面上使用&lt;script&gt;标签来引入的方式) `npm install jquery --save` 8. 因为我们是在typescript里使用jquery，所以我们需要添加jquery的@types，为了能让typescript使用它的类型 `npm install @types/jquery --save` 9. 在根目录下添加tsconfig.json文件，这个文件是用来配置typescript的 ```&#123; &quot;compilerOptions&quot;: &#123; &quot;outDir&quot;: &quot;./dist/&quot;, &quot;sourceMap&quot;: true, &quot;noImplicitAny&quot;: false, &quot;module&quot;: &quot;commonjs&quot;, &quot;target&quot;: &quot;es5&quot;, &quot;allowJs&quot;: true &#125;, &quot;include&quot;: [ &quot;./src/*&quot; ], &quot;exclude&quot;: [ &quot;node_modules&quot; ] &#125; 7. 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里 7. 6. 现在来使用npm安装开发要使用的依赖，因为这两个只是开发阶段要用的工具，并不是最终代码要使用的库，所以save到dev里","categories":[],"tags":[]},{"title":"Test","slug":"Test","date":"2017-05-04T09:17:22.000Z","updated":"2017-05-04T09:18:12.512Z","comments":true,"path":"2017/05/04/Test/","link":"","permalink":"http://angrymoto.me/2017/05/04/Test/","excerpt":"","text":"这是一个测试看看能评论吗？","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://angrymoto.me/tags/test/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-04-19T09:42:03.681Z","updated":"2017-05-04T07:08:19.362Z","comments":true,"path":"2017/04/19/hello-world/","link":"","permalink":"http://angrymoto.me/2017/04/19/hello-world/","excerpt":"TestTestTestTestTestTest","text":"TestTestTestTestTestTest Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}